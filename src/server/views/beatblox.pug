extends includes/layout.pug
block title
  title BeatBlox
block content
  mixin ytPlayer(id, width, height)
    iframe(allowfullscreen="1" width=width height=height src='https://www.youtube.com/embed/'+id)

  .container
    div(style='text-align: center')
      img(src='/images/beatblox/logo.png' style='width: 150px; margin: 25px' alt='BeatBlox Logo')

    h2 BeatBlox
    p
      | BeatBlox is the latest extension to the #[a(href='https://netsblox.org/') NetsBlox] block-based programming environment developed at Vanderbilt University.
      | NetsBlox was built on top of the open-source codebase of #[a(href='https://snap.berkeley.edu/') Snap!] from UC Berkeley and was specifically designed to teach curring edge computing concepts such as distributed computing, the Internet of Things, and cybersecurity to novices.
      | It opens the internet to student projects, making computing more relevant to their lives and more engaging.
      | A modular, full year, high school curriculum utilizing NetsBlox called #[a(href='https://csfrontiers.org/') Computer Science Frontiers] (CSF) utilizes NetsBlox and is freely available to teachers to bring these capabilities to their classrooms.
      | A new #[a(href='https://www.coursera.org/learn/programming-for-a-networked-world/') online course] can help both students and teachers learn NetsBlox from the ground up.
    p
      | With the creation of BeatBlox, NetsBlox aims to become even more engaging and motivating to students by combining computing with another domain that is already widely loved by people from all backgrounds, music.
      | The overarching goal of BeatBlox is to reach students who have traditionally felt excluded from or unrepresented in computer science.
      | BeatBlox allows students to create high quality music using a rich set of simulated digital instruments, add special effects such as reverb, panning or layering, incorporate public domain tunes into their creations, import sheet music, and even save their compositions for playback on any device.
      | Its built-in networking capabilities make it possible for students to collaborate and create a digital orchestra where each computer plays a single instrument yet remains synchronized.
      | Students can even add visualizations to their music, or conversely, add sound effects or musical scores to their games or digital animations.
    p
      | Check out our sample set of projects demonstrating the many capabilities of BeatBlox.
      | Each demo is summarized in a brief video, and a link is provided to open the corresponding project in BeatBlox for tinkering.
      | To run a project, click the green flag at the top right corner of the BeatBlox interface.
      | Happy coding!

    .flexrow
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Basic Music Functionality
        div(style='margin: 20px auto 20px auto')
          +ytPlayer('YVK3ysKePc8', 500, 281)
        p Introduction to BeatBlox showcasing a simple block-based satellite-like musical effect.
        p
        p #[a(href='http://tinyurl.com/BeepBlox') Open Project]
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Multi-Instrument Functionality
        div(style='margin: 20px auto 20px auto')
          +ytPlayer('_-9BKaLxeQw', 500, 281)
        p BeatBlox-based implementation of Beethoven's "Ode to Joy" highlighting simultaneous playback of multiple instruments along with real-time score visualization.
        p
        p #[a(href='http://tinyurl.com/CodeToJoy') Open Project]
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Real-Time Graphics
        div(style='margin: 20px auto 20px auto')
          +ytPlayer('t6NO8M-WykQ', 500, 281)
        p Sampling of various easy-to-create visualizations to accompany a musical composition, demonstrating the real-time graphical capabilities of BeatBlox.
        p
        p #[a(href='http://tinyurl.com/BeatBloxVisualizations') Open Project]
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Distributed Projects
        div(style='margin: 20px auto 20px auto')
          a(href='http://tinyurl.com/MultiInstrument')
            img(src='/images/placeholder.jpg' style='width: 200px')
        p Implementation of a four-piece band first on a single computer and then by four individual BeatBlox users being played back synchronously.
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Networked Effects and Graphics
        div(style='margin: 20px auto 20px auto')
          +ytPlayer('m38ea6as4s0', 500, 281)
        p Helicopter flyby on a single computer first, then in three separate browser tabs, and finally, using distributed audiovisual animation across three computers showing a helicopter moving both visually and acoustically between individually running programs.
        p
        p #[a(href='http://tinyurl.com/BeatBloxHelicopter') Open Project]
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 External Device Access
        div(style='margin: 20px auto 20px auto')
          a(href='http://tinyurl.com/DeviceMaracas')
            img(src='/images/placeholder.jpg' style='width: 200px')
        p Musical compositions demonstrating ease of access to external devices, such as MIDI keyboards and mobile phones. To try maracas on your phone, you need to install the PhoneIoT mobile app from the app store and then scan the QR code as shown in the video.
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Open Accessibility and Tinkering
        div(style='margin: 20px auto 20px auto')
          a(href='http://tinyurl.com/MidiImport')
            img(src='/images/placeholder.jpg' style='width: 200px')
        p End-to-end demonstration of importing a public domain MIDI song into BeatBlox, changing its key and tempo, and exporting the resulting audio to a file.
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Augmented Reality
        div(style='margin: 20px auto 20px auto')
          a(href='http://tinyurl.com/BeatBloxTheremin')
            img(src='/images/placeholder.jpg' style='width: 200px')
        p Two hardware-free instrument implementations allowing users to experiment with playing music without requiring physical hardware or instruments using a webcam only.
      .flexcol(style='min-width: 400px; padding: 40px')
        h3 Curricular Tasks
        div(style='margin: 20px auto 20px auto')
          a(href='http://tinyurl.com/BeatBloxGrader')
            img(src='/images/placeholder.jpg' style='width: 200px')
        p Sample curricular module with a simple built-in task with integrated assessment and the ability for teachers to examine the process not just the end result.
